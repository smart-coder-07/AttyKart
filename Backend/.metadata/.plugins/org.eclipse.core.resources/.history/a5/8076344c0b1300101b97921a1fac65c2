package com.wallet.model;

import java.util.Date;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Document(collection = "wallets")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Wallet {
    @Id
    private String id;

    @NotBlank(message = "User ID cannot be empty")
    private String userId;
    @NotNull(message = "Amount cannot be null")
    @Min(value = 1, message = "Amount must be greater than zero")
    private Double amount;

    // @NotBlank(message = "Transaction type cannot be empty")
    @Pattern(regexp = "^(CREDIT|DEBIT)$", message = "Transaction type must be 'CREDIT' or 'DEBIT'")
    private String transactionType;

    // @NotBlank(message = "Transaction status cannot be empty")
    @Pattern(regexp = "^(SUCCESS|FAILED|PENDING)$", message = "Transaction status must be 'SUCCESS', 'FAILED', or 'PENDING'")
    private String transactionStatus;
}