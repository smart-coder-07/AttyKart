package com.transaction.model;

import java.time.LocalDate;
import java.util.Date;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Document(collection = "transactions")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Transaction {
    @Id
    private String id;

    @NotBlank(message = "User ID cannot be empty")
    private String userId;

    @NotBlank(message = "Order ID cannot be empty")
    private String orderId;
    private LocalDate transactionDate;

    @NotNull(message = "Amount cannot be null")
    @Min(value = 1, message = "Amount must be greater than zero")
    private Double amount;

    @NotBlank(message = "Payment mode cannot be empty")
    @Pattern(regexp = "^(WALLET|CASH_ON_DELIVERY)$", 
             message = "Payment mode must be either 'WALLET' or 'CASH_ON_DELIVERY'")
    private String paymentMode;

    @NotBlank(message = "Transaction status cannot be empty")
    @Pattern(regexp = "^(SUCCESS|FAILED|PENDING)$", 
             message = "Transaction status must be 'SUCCESS', 'FAILED', or 'PENDING'")
    private String transactionStatus;
}
